server: 
  undertow: 
    max-http-post-size: 0 
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程,数量和CPU 内核数目一样即可
    io-threads: 4
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载  io-threads*8
    worker-threads: 32
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
#   buffers-per-region: 1024 # 这个参数不需要写了
# 是否分配的直接内存
    direct-buffers: true

filter:
   ignore-uri: /api/login,/api/logout,/api/static,/api/sendMobileCode,/api/varifyMObileCode

zuul:
  #hystrix信号量semaphore的设置，默认为100，决定了hystrix并发请求数 tomcat线程池默认是200
  semaphore:
    max-semaphores: 500
  host:
    maxTotalConnections: 2048
    maxPerRouteConnections: 1024
  routes:
    poc-auth-service:
      path: /auth/**
      serviceId: poc-auth-service
    poc-order-service:
      path: /order/**
      serviceId: poc-order-service
    poc-product-service1:
      path: /product/**
      serviceId: poc-product-service
    poc-promotion-service:
      path: /promotion/**
      serviceId: poc-promotion-service
    poc-payment-service:
      path: /payment/**
      serviceId: poc-payment-service
    poc-customer-service:
      path: /customer/**
      serviceId: poc-customer-service
    #poc-admin-service:
      #path: /admin/**
      #serviceId: poc-admin-service

ribbon:
  #Ribbon允许最大连接数，即所有后端微服务实例请求并发数之和的最大值。
  MaxTotalConnections: 500
  #单个后端微服务实例能接收的最大请求并发数  
  MaxConnectionsPerHost: 500
  ReadTimeout: 2000
  ConnectTimeout: 2000
  # 关闭Ribbon的重试机制
  MaxAutoRetriesNextServer: 1 #慎用
  
#hystrix 配置
hystrix:
  threadpool:
    default:
      coreSize: 20 #并发执行的最大线程数，默认10
      maxQueueSize: 500 #BlockingQueue的最大队列数，默认值-1
      queueSizeRejectionThreshold: 500 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝，默认值5
  command:
    default:
      execution:
        timeout:
        #如果enabled设置为false，则请求超时交给ribbon控制
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 8000

#如果想对单独的某个服务进行详细配置，如下
#poc-customer-service:
#  ribbon:
#    connectTimeout: 5000
 
logging:
  level:
    com.poc: DEBUG
    jdbc.audit: ERROR
    jdbc.resultset: ERROR
    jdbc.sqlonly: ERROR

spring:
   rabbitmq:
      host: 192.168.18.150
      port: 5672
      username: cloud
      password: cloud
      publisher-confirms: true
      publisher-returns: true
      listener:
         #针对direct模式
         #direct:
            #acknowledge-mode: MANUAL
         simple:
            acknowledge-mode: MANUAL
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
